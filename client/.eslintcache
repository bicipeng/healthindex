[{"/Users/bicipeng/Desktop/healthindex/client/src/index.js":"1","/Users/bicipeng/Desktop/healthindex/client/src/reportWebVitals.js":"2","/Users/bicipeng/Desktop/healthindex/client/src/App.js":"3","/Users/bicipeng/Desktop/healthindex/client/src/components/Landing.js":"4","/Users/bicipeng/Desktop/healthindex/client/src/components/Narbar.js":"5","/Users/bicipeng/Desktop/healthindex/client/src/components/Login.js":"6","/Users/bicipeng/Desktop/healthindex/client/src/components/Register.js":"7","/Users/bicipeng/Desktop/healthindex/client/src/store.js":"8","/Users/bicipeng/Desktop/healthindex/client/src/reducers/index.js":"9","/Users/bicipeng/Desktop/healthindex/client/src/actions/auth.js":"10","/Users/bicipeng/Desktop/healthindex/client/src/reducers/auth.js":"11","/Users/bicipeng/Desktop/healthindex/client/src/actions/types.js":"12","/Users/bicipeng/Desktop/healthindex/client/src/components/dashboard/Dashboard.js":"13","/Users/bicipeng/Desktop/healthindex/client/src/components/PrivateRoute.js":"14","/Users/bicipeng/Desktop/healthindex/client/src/reducers/profile.js":"15","/Users/bicipeng/Desktop/healthindex/client/src/actions/profile.js":"16","/Users/bicipeng/Desktop/healthindex/client/src/components/CreatePatientProfile.js":"17","/Users/bicipeng/Desktop/healthindex/client/src/components/PatientCard.js":"18","/Users/bicipeng/Desktop/healthindex/client/src/components/PatientProfiles.js":"19","/Users/bicipeng/Desktop/healthindex/client/src/reducers/patientProfile.js":"20"},{"size":479,"mtime":1608311979769,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608310444224,"results":"23","hashOfConfig":"22"},{"size":1562,"mtime":1609207870854,"results":"24","hashOfConfig":"22"},{"size":834,"mtime":1608566522893,"results":"25","hashOfConfig":"22"},{"size":1090,"mtime":1608565915713,"results":"26","hashOfConfig":"22"},{"size":1933,"mtime":1609302000987,"results":"27","hashOfConfig":"22"},{"size":3312,"mtime":1609302526533,"results":"28","hashOfConfig":"22"},{"size":474,"mtime":1608409867863,"results":"29","hashOfConfig":"22"},{"size":221,"mtime":1609212602347,"results":"30","hashOfConfig":"22"},{"size":2048,"mtime":1608597612896,"results":"31","hashOfConfig":"22"},{"size":1422,"mtime":1608427224750,"results":"32","hashOfConfig":"22"},{"size":614,"mtime":1608815507053,"results":"33","hashOfConfig":"22"},{"size":1318,"mtime":1609300191543,"results":"34","hashOfConfig":"22"},{"size":587,"mtime":1608591707575,"results":"35","hashOfConfig":"22"},{"size":1010,"mtime":1609213491271,"results":"36","hashOfConfig":"22"},{"size":2292,"mtime":1609208402200,"results":"37","hashOfConfig":"22"},{"size":4067,"mtime":1609303258395,"results":"38","hashOfConfig":"22"},{"size":1787,"mtime":1609298190023,"results":"39","hashOfConfig":"22"},{"size":859,"mtime":1609300200498,"results":"40","hashOfConfig":"22"},{"size":1254,"mtime":1609213467029,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13h7hss",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"/Users/bicipeng/Desktop/healthindex/client/src/index.js",[],["89","90"],"/Users/bicipeng/Desktop/healthindex/client/src/reportWebVitals.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/App.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/components/Landing.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/components/Narbar.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/components/Login.js",["91"],"/Users/bicipeng/Desktop/healthindex/client/src/components/Register.js",["92"],"/Users/bicipeng/Desktop/healthindex/client/src/store.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/reducers/index.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/actions/auth.js",["93"],"import Axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_FOUND, UNAUTHRIZED, LOGIN_FAIL, LOGIN_SUCCESS,LOG_OUT,CLEAR_PROFILE } from \"./types\";\n\n\nexport const register = ({ firstName,lastName,NPI, email, password, passwordConfirmed }) => async dispatch => {\n    try {\n        const user = {\n            firstName,lastName,NPI, email, password, passwordConfirmed\n        }\n        const res = await Axios.post(\"/users\", user, {\n            headers: {\n                \"Conten-Type\": \"application/json\"\n            }\n        })\n        console.log(\"****\",res.data)\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n        dispatch(loadUser())\n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n//if we have a token, send it to the backend ,hit /auth route to check if user is logged in or not \n \n\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n        Axios.defaults.headers.common['x-auth-token'] = localStorage.token\n    } else {\n        delete Axios.defaults.headers.common['x-auth-token']\n    }\n    try {\n        const res = await Axios.get(\"/auth\")\n        dispatch({\n            type: USER_FOUND,\n            payload: res.data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UNAUTHRIZED\n        })\n\n    }\n}\n\n\n\nexport const login = ({ email, password }) => async dispatch => {\n    try {\n        const user = {\n            email, password\n        }\n        const res = await Axios.post(\"/auth\", user, {\n            headers: {\n                \"Conten-Type\": \"application/json\"\n            }\n        })\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n        //make sure stays login \n        dispatch(loadUser())\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n}\n\nexport const logout = () => async dispath =>{\n   dispath({type:CLEAR_PROFILE,\n       type: LOG_OUT\n       \n   })\n}","/Users/bicipeng/Desktop/healthindex/client/src/reducers/auth.js",["94"],"//register user \nimport { REGISTER_SUCCESS, REGISTER_FAIL, UNAUTHRIZED, USER_FOUND ,LOGIN_FAIL,LOGIN_SUCCESS,LOG_OUT} from \"../actions/types\"\n\nconst initialState = {\n    //token is stored in localStorage which has a getItem method\n    token: localStorage.getItem(\"token\"),\n    isAuth: null,\n    loading: true,\n    user: null\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem(\"token\", action.payload.token)\n            return {\n                ...state,\n                ...action.payload,\n                isAuth: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case LOG_OUT: \n            localStorage.removeItem(\"token\")\n            return {\n                ...state,\n                token: null,\n                isAuth: false,\n                loading: false\n\n            }\n        case USER_FOUND:\n            return {\n                ...state,\n                isAuth: true,\n                loading: false,\n                user: action.payload\n            }\n\n        case UNAUTHRIZED:\n        case LOGIN_FAIL:\n            localStorage.removeItem(\"token\")\n            return {\n                ...state,\n                token: null,\n                isAuth: false,\n                loading: false\n\n            }\n      \n\n        default: return state;\n    }\n}","/Users/bicipeng/Desktop/healthindex/client/src/actions/types.js",["95"],"import { connect } from \"react-redux\"\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = \"REGISTER_FAIL\"\nexport const USER_FOUND = \"USER_FOUND\"\nexport const UNAUTHRIZED = \"UNAUTHRIZED\"\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\nexport const LOG_OUT = \"LOG_OUT\"\nexport const GET_PROFILES = \" GET_PROFILES\"\nexport const PROFILE_ERROR = \"PORFILE_ERROR\"\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\"\nexport const CREATE_PROFILE = \"CREATE_PROFIL\"\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\"\nexport const GET_PATIENT_PROFILE =\"GET_PATIENT_PROFILE\"","/Users/bicipeng/Desktop/healthindex/client/src/components/dashboard/Dashboard.js",["96","97","98"],"/Users/bicipeng/Desktop/healthindex/client/src/components/PrivateRoute.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/reducers/profile.js",["99"],"import { PROFILE_ERROR, GET_PROFILES, GET_PATIENT_PROFILE, CLEAR_PROFILE } from \"../actions/types\"\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    loading: true,\n    error: {}\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n\n    switch (type) {\n\n        case GET_PROFILES:\n\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            }\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profiles: [],\n                profile:null,\n                loading: false\n            }\n\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n\n            }\n        case GET_PATIENT_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            }\n        default:\n            return state\n    }\n}","/Users/bicipeng/Desktop/healthindex/client/src/actions/profile.js",["100"],"import Axios from \"axios\"\nimport { GET_PROFILES, PROFILE_ERROR, CLEAR_PROFILE, CREATE_PROFILE,GET_PATIENT_PROFILE } from \"./types\"\n\n//get current users profile\n//profile/me\nexport const getUserProfile = () => async dispatch => {\n    try {\n        const res = await Axios.get(\"/profile/me\");\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                message: \"Fail to load profile\",\n                status: error.response.status\n            }\n        })\n    }\n\n}\n\n//create pt profile\n\nexport const createProfile = (formData) => async dispatch => {\n        try {\n          \n            const res = await Axios.post(\"/newpatient\", formData, { headers: { \"Content-Type\": 'application/json' } })\n              console.log(\"res data in createprofile\", res.data)\n            dispatch({\n                type: CREATE_PROFILE,\n                payload: res.data\n            })\n          \n        } catch (error) {\n            if(error){\n                console.log(\"error occurs in creating profile\")\n            }\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: { message: \"Error Occurs\" },\n                status: error.response.status\n            })\n        }\n\n}\n        //get pt profiles\nexport const getPatientProfiles =()=>async dispatch=>{\n    try {\n        const res = await Axios.get(\"/patients\")\n    dispatch({\n        type:GET_PROFILES,\n        payload:res.data\n    }) \n    } catch (error) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{\n            status:error.response.statusText,\n            message:\"profiles not found \"\n            }\n        })\n    }\n    \n}\n//get single profile \n\nexport const  getPatientProfile =(id) =>async dispatch =>{\n    try {\n        const res = await Axios.get(`/patients/${id}`)\n        console.log(\"here in get single profile\",res)\n        dispatch({\n            type: GET_PATIENT_PROFILE,\n            payload:res.data\n        })\n    } catch (error) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{\n                message:\"Error Occured\",\n                status:error.response.statusText,\n            }\n        })\n    }\n}","/Users/bicipeng/Desktop/healthindex/client/src/components/CreatePatientProfile.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/components/PatientCard.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/components/PatientProfiles.js",["101"],"/Users/bicipeng/Desktop/healthindex/client/src/reducers/patientProfile.js",["102"],"import { CREATE_PROFILE, GET_PATIENT_PROFILE, GET_PROFILES ,CLEAR_PROFILE,} from \"../actions/types\"\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    loading: true,\n    error: {}\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n   \n    switch (type) {\n\n\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            }\n        case CREATE_PROFILE:\n        case GET_PATIENT_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                laoding: false\n            }\n\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                profiles:[],\n                loading: false\n            }\n        // case ADD_PROFILE:\n        //     return {\n        //         ...state,\n        //         profiles: [...state.profiles, payload],\n        //         loading: false\n        //     }\n\n        // case PROFILE_ERROR:\n        //     return {\n        //         ...state,\n        //         error: payload,\n        //         loading: false\n\n        //     }\n        default:\n            return state\n    }\n}",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":79,"column":8,"nodeType":"113","messageId":"114","endLine":79,"endColumn":12},{"ruleId":"115","severity":1,"message":"116","line":12,"column":1,"nodeType":"117","endLine":55,"endColumn":2},{"ruleId":"107","severity":1,"message":"118","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":17},{"ruleId":"107","severity":1,"message":"119","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"120","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":13,"column":8,"nodeType":"123","endLine":13,"endColumn":10,"suggestions":"124"},{"ruleId":"115","severity":1,"message":"116","line":10,"column":1,"nodeType":"117","endLine":46,"endColumn":2},{"ruleId":"107","severity":1,"message":"125","line":2,"column":39,"nodeType":"109","messageId":"110","endLine":2,"endColumn":52},{"ruleId":"107","severity":1,"message":"126","line":4,"column":16,"nodeType":"109","messageId":"110","endLine":4,"endColumn":21},{"ruleId":"115","severity":1,"message":"116","line":10,"column":1,"nodeType":"117","endLine":54,"endColumn":2},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'connect' is defined but never used.","'Redirect' is defined but never used.","'loadUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPatientProfiles'. Either include it or remove the dependency array. If 'getPatientProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["129"],"'CLEAR_PROFILE' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [getPatientProfiles]",{"range":"132","text":"133"},[492,494],"[getPatientProfiles]"]