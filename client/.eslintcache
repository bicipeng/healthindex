[{"/Users/bicipeng/Desktop/healthindex/client/src/index.js":"1","/Users/bicipeng/Desktop/healthindex/client/src/reportWebVitals.js":"2","/Users/bicipeng/Desktop/healthindex/client/src/App.js":"3","/Users/bicipeng/Desktop/healthindex/client/src/components/Landing.js":"4","/Users/bicipeng/Desktop/healthindex/client/src/components/Narbar.js":"5","/Users/bicipeng/Desktop/healthindex/client/src/components/Login.js":"6","/Users/bicipeng/Desktop/healthindex/client/src/components/Register.js":"7","/Users/bicipeng/Desktop/healthindex/client/src/store.js":"8","/Users/bicipeng/Desktop/healthindex/client/src/reducers/index.js":"9","/Users/bicipeng/Desktop/healthindex/client/src/actions/auth.js":"10","/Users/bicipeng/Desktop/healthindex/client/src/reducers/auth.js":"11","/Users/bicipeng/Desktop/healthindex/client/src/actions/types.js":"12","/Users/bicipeng/Desktop/healthindex/client/src/components/dashboard/Dashboard.js":"13","/Users/bicipeng/Desktop/healthindex/client/src/components/PrivateRoute.js":"14","/Users/bicipeng/Desktop/healthindex/client/src/reducers/profile.js":"15","/Users/bicipeng/Desktop/healthindex/client/src/actions/profile.js":"16","/Users/bicipeng/Desktop/healthindex/client/src/components/CreatePatientProfile.js":"17","/Users/bicipeng/Desktop/healthindex/client/src/components/PateintProfiles.js":"18","/Users/bicipeng/Desktop/healthindex/client/src/components/PatientCard.js":"19"},{"size":479,"mtime":1608311979769,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1608310444224,"results":"22","hashOfConfig":"21"},{"size":1445,"mtime":1608682325722,"results":"23","hashOfConfig":"21"},{"size":834,"mtime":1608566522893,"results":"24","hashOfConfig":"21"},{"size":1090,"mtime":1608565915713,"results":"25","hashOfConfig":"21"},{"size":2599,"mtime":1608567774970,"results":"26","hashOfConfig":"21"},{"size":3350,"mtime":1608599684185,"results":"27","hashOfConfig":"21"},{"size":474,"mtime":1608409867863,"results":"28","hashOfConfig":"21"},{"size":155,"mtime":1608563196661,"results":"29","hashOfConfig":"21"},{"size":2048,"mtime":1608597612896,"results":"30","hashOfConfig":"21"},{"size":1422,"mtime":1608427224750,"results":"31","hashOfConfig":"21"},{"size":614,"mtime":1608815507053,"results":"32","hashOfConfig":"21"},{"size":1358,"mtime":1608822351219,"results":"33","hashOfConfig":"21"},{"size":587,"mtime":1608591707575,"results":"34","hashOfConfig":"21"},{"size":800,"mtime":1608819240526,"results":"35","hashOfConfig":"21"},{"size":2238,"mtime":1608821047429,"results":"36","hashOfConfig":"21"},{"size":3981,"mtime":1608817392469,"results":"37","hashOfConfig":"21"},{"size":766,"mtime":1608821403072,"results":"38","hashOfConfig":"21"},{"size":943,"mtime":1608821730041,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"13h7hss",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bicipeng/Desktop/healthindex/client/src/index.js",[],["84","85"],"/Users/bicipeng/Desktop/healthindex/client/src/reportWebVitals.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/App.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/components/Landing.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/components/Narbar.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/components/Login.js",["86"],"\nimport React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from \"react-router-dom\"\nimport Axios from \"axios\"\nimport { connect } from \"react-redux\"\nimport \"./Form.css\"\n\nimport { login } from \"./../actions/auth\"\nconst Login = ({ login,isAuth }) => {\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\",\n    })\n\n    const { email, password } = formData\n    const handleChange = (evt) => setFormData({ ...formData, [evt.target.name]: evt.target.value })\n    const handleSumit = async evt => {\n        evt.preventDefault();\n        // if (passwordConfirmed !== password) {\n        //     console.log(\"password do not match \")\n        // } else {\n        //     const newUser = {\n        //         name,\n        //         email,\n        //         password,\n        //         passwordConfirmed\n        //     }\n        //     try {\n        //         const res = await Axios.post(\"/users\", newUser, {\n        //             headers: {\n        //                 \"Content-Type\": \"application/json\"\n        //             }\n        //         })\n\n        //         console.log(res.data)\n        //     } catch (error) {\n        //         console.log(error)\n        //     }\n        // }\n        login({ email, password })\n    }\nif(isAuth){\n    return <Redirect to =\"/dashboard\"/>\n}\n    return (<Fragment>\n        <div className=\"form-container\" >\n            <h1 className=\"signup\">Log in </h1>\n            <p className=\"lead\"><i className=\"fas fa-user-md\"></i>Sign in to Your Account</p>\n            <form className=\"form\" onSubmit={handleSumit}>\n\n                <div className=\"form-group\">\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={handleChange} required />\n\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"8\"\n                        value={password}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Need an Account?<Link to=\"/register\">Create an account</Link>\n            </p>\n        </div>\n    </Fragment>);\n}\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { login })(Login);","/Users/bicipeng/Desktop/healthindex/client/src/components/Register.js",["87"],"\nimport React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from \"react-router-dom\"\nimport Axios from \"axios\"\nimport { register } from \"./../actions/auth\"\nimport { connect } from \"react-redux\"\nimport \"./Form.css\"\nconst Register = ({ register, isAuth }) => {\n    const [formData, setFormData] = useState({\n\n        firstName: \"\",\n        lastName: \"\",\n        NPI: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirmed: \"\"\n    })\n\n    const { firstName, lastName, NPI, email, password, passwordConfirmed } = formData\n    const handleChange = (evt) => setFormData({ ...formData, [evt.target.name]: evt.target.value })\n    const handleSumit = async evt => {\n        evt.preventDefault();\n        if (passwordConfirmed !== password) {\n            alert(\"passwords do not match \")\n        } else {\n            register({ firstName, lastName, NPI, email, password, passwordConfirmed })\n        }\n    }\n    console.log(\"Registerjs\", isAuth)\n    if (isAuth) {\n      return  <Redirect to=\"/dashboard\" />\n    }\n    return (<Fragment>\n        <div className=\"form-container\" >\n            <h1 className=\"signup\">Sign Up</h1>\n            <p className=\"lead\"><i class=\"fas fa-user-md\"></i>Create Your Account</p>\n            <form className=\"form\" onSubmit={handleSumit}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"First Name\" value={firstName} name=\"firstName\" onChange={handleChange} required />\n\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Last Name\" value={lastName} name=\"lastName\" onChange={handleChange} required />\n\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"NPI (National Provider Identifier)\" value={NPI} name=\"NPI\" onChange={handleChange} required />\n\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={handleChange} required />\n\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"8\"\n                        value={password}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"passwordConfirmed\"\n                        minLength=\"8\"\n                        value={passwordConfirmed}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </div>\n    </Fragment>);\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps, { register })(Register);","/Users/bicipeng/Desktop/healthindex/client/src/store.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/reducers/index.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/actions/auth.js",["88"],"import Axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_FOUND, UNAUTHRIZED, LOGIN_FAIL, LOGIN_SUCCESS,LOG_OUT,CLEAR_PROFILE } from \"./types\";\n\n\nexport const register = ({ firstName,lastName,NPI, email, password, passwordConfirmed }) => async dispatch => {\n    try {\n        const user = {\n            firstName,lastName,NPI, email, password, passwordConfirmed\n        }\n        const res = await Axios.post(\"/users\", user, {\n            headers: {\n                \"Conten-Type\": \"application/json\"\n            }\n        })\n        console.log(\"****\",res.data)\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n        dispatch(loadUser())\n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n//if we have a token, send it to the backend ,hit /auth route to check if user is logged in or not \n \n\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n        Axios.defaults.headers.common['x-auth-token'] = localStorage.token\n    } else {\n        delete Axios.defaults.headers.common['x-auth-token']\n    }\n    try {\n        const res = await Axios.get(\"/auth\")\n        dispatch({\n            type: USER_FOUND,\n            payload: res.data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UNAUTHRIZED\n        })\n\n    }\n}\n\n\n\nexport const login = ({ email, password }) => async dispatch => {\n    try {\n        const user = {\n            email, password\n        }\n        const res = await Axios.post(\"/auth\", user, {\n            headers: {\n                \"Conten-Type\": \"application/json\"\n            }\n        })\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n        //make sure stays login \n        dispatch(loadUser())\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n}\n\nexport const logout = () => async dispath =>{\n   dispath({type:CLEAR_PROFILE,\n       type: LOG_OUT\n       \n   })\n}","/Users/bicipeng/Desktop/healthindex/client/src/reducers/auth.js",["89"],"//register user \nimport { REGISTER_SUCCESS, REGISTER_FAIL, UNAUTHRIZED, USER_FOUND ,LOGIN_FAIL,LOGIN_SUCCESS,LOG_OUT} from \"../actions/types\"\n\nconst initialState = {\n    //token is stored in localStorage which has a getItem method\n    token: localStorage.getItem(\"token\"),\n    isAuth: null,\n    loading: true,\n    user: null\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem(\"token\", action.payload.token)\n            return {\n                ...state,\n                ...action.payload,\n                isAuth: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case LOG_OUT: \n            localStorage.removeItem(\"token\")\n            return {\n                ...state,\n                token: null,\n                isAuth: false,\n                loading: false\n\n            }\n        case USER_FOUND:\n            return {\n                ...state,\n                isAuth: true,\n                loading: false,\n                user: action.payload\n            }\n\n        case UNAUTHRIZED:\n        case LOGIN_FAIL:\n            localStorage.removeItem(\"token\")\n            return {\n                ...state,\n                token: null,\n                isAuth: false,\n                loading: false\n\n            }\n      \n\n        default: return state;\n    }\n}","/Users/bicipeng/Desktop/healthindex/client/src/actions/types.js",["90"],"import { connect } from \"react-redux\"\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = \"REGISTER_FAIL\"\nexport const USER_FOUND = \"USER_FOUND\"\nexport const UNAUTHRIZED = \"UNAUTHRIZED\"\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\nexport const LOG_OUT = \"LOG_OUT\"\nexport const GET_PROFILES = \" GET_PROFILES\"\nexport const PROFILE_ERROR = \"PORFILE_ERROR\"\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\"\nexport const CREATE_PROFILE = \"CREATE_PROFIL\"\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\"\nexport const GET_PATIENT_PROFILE =\"GET_PATIENT_PROFILE\"","/Users/bicipeng/Desktop/healthindex/client/src/components/dashboard/Dashboard.js",["91","92","93"],"/Users/bicipeng/Desktop/healthindex/client/src/components/PrivateRoute.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/reducers/profile.js",["94"],"/Users/bicipeng/Desktop/healthindex/client/src/actions/profile.js",["95"],"/Users/bicipeng/Desktop/healthindex/client/src/components/CreatePatientProfile.js",[],"/Users/bicipeng/Desktop/healthindex/client/src/components/PateintProfiles.js",["96","97"],"/Users/bicipeng/Desktop/healthindex/client/src/components/PatientCard.js",["98","99","100","101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":79,"column":8,"nodeType":"113","messageId":"114","endLine":79,"endColumn":12},{"ruleId":"115","severity":1,"message":"116","line":12,"column":1,"nodeType":"117","endLine":55,"endColumn":2},{"ruleId":"107","severity":1,"message":"118","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":17},{"ruleId":"107","severity":1,"message":"119","line":3,"column":27,"nodeType":"109","messageId":"110","endLine":3,"endColumn":36},{"ruleId":"107","severity":1,"message":"120","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":18},{"ruleId":"107","severity":1,"message":"121","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":10,"column":1,"nodeType":"117","endLine":39,"endColumn":2},{"ruleId":"107","severity":1,"message":"122","line":2,"column":39,"nodeType":"109","messageId":"110","endLine":2,"endColumn":52},{"ruleId":"107","severity":1,"message":"123","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":8,"column":7,"nodeType":"126","endLine":8,"endColumn":9,"suggestions":"127"},{"ruleId":"107","severity":1,"message":"123","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"119","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":47},{"ruleId":"107","severity":1,"message":"118","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":17},{"ruleId":"107","severity":1,"message":"128","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":22,"column":1,"nodeType":"131","messageId":"132","endLine":25,"endColumn":61},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'connect' is defined but never used.","'useEffect' is defined but never used.","'loadUser' is defined but never used.","'getPatientProfiles' is defined but never used.","'CLEAR_PROFILE' is defined but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPatientProfiles'. Either include it or remove the dependency array. If 'getPatientProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["135"],"'getPatientProfile' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [getPatientProfiles]",{"range":"138","text":"139"},[334,336],"[getPatientProfiles]"]